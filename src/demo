Element {elName = QName {qName = "SourceUnit", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = 

[Text (CData {cdVerbatim = CDataText, cdData = "\n    ", cdLine = Just 1}),Elem (Element {elName = QName {qName = "List", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "\n        ", cdLine = Just 2}),Elem (Element {elName = QName {qName = "ExpressionStatement", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "\n            ", cdLine = Just 3}),Elem (Element {elName = QName {qName = "MultiplyExpression", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "\n                ", cdLine = Just 4}),Elem (Element {elName = QName {qName = "ParenthesizedExpression", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "\n                    ", cdLine = Just 5}),Elem (Element {elName = QName {qName = "OpenParenToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "(", cdLine = Just 6})], elLine = Just 6}),Text (CData {cdVerbatim = CDataText, cdData = "\n                    ", cdLine = Just 6}),Elem (Element {elName = QName {qName = "AddExpression", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "\n                        ", cdLine = Just 7}),Elem (Element {elName = QName {qName = "NumericLiteral", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "3", cdLine = Just 8})], elLine = Just 8}),Text (CData {cdVerbatim = CDataText, cdData = "\n                        ", cdLine = Just 8}),Elem (Element {elName = QName {qName = "PlusToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "+", cdLine = Just 9})], elLine = Just 9}),Text (CData {cdVerbatim = CDataText, cdData = "\n                        ", cdLine = Just 9}),Elem (Element {elName = QName {qName = "NumericLiteral", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "2", cdLine = Just 10})], elLine = Just 10}),Text (CData {cdVerbatim = CDataText, cdData = "\n                    ", cdLine = Just 10})], elLine = Just 7}),Text (CData {cdVerbatim = CDataText, cdData = "\n                    ", cdLine = Just 11}),Elem (Element {elName = QName {qName = "CloseParenToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = ")", cdLine = Just 12})], elLine = Just 12}),Text (CData {cdVerbatim = CDataText, cdData = "\n                ", cdLine = Just 12})], elLine = Just 5}),Text (CData {cdVerbatim = CDataText, cdData = "\n                ", cdLine = Just 13}),Elem (Element {elName = QName {qName = "AsteriskToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "*", cdLine = Just 14})], elLine = Just 14}),Text (CData {cdVerbatim = CDataText, cdData = "\n                ", cdLine = Just 14}),Elem (Element {elName = QName {qName = "ParenthesizedExpression", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "\n                    ", cdLine = Just 15}),Elem (Element {elName = QName {qName = "OpenParenToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "(", cdLine = Just 16})], elLine = Just 16}),Text (CData {cdVerbatim = CDataText, cdData = "\n                    ", cdLine = Just 16}),Elem (Element {elName = QName {qName = "AddExpression", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "\n                        ", cdLine = Just 17}),Elem (Element {elName = QName {qName = "NumericLiteral", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "4", cdLine = Just 18})], elLine = Just 18}),Text (CData {cdVerbatim = CDataText, cdData = "\n                        ", cdLine = Just 18}),Elem (Element {elName = QName {qName = "PlusToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "+", cdLine = Just 19})], elLine = Just 19}),Text (CData {cdVerbatim = CDataText, cdData = "\n                        ", cdLine = Just 19}),Elem (Element {elName = QName {qName = "NumericLiteral", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = "5", cdLine = Just 20})], elLine = Just 20}),Text (CData {cdVerbatim = CDataText, cdData = "\n                    ", cdLine = Just 20})], elLine = Just 17}),Text (CData {cdVerbatim = CDataText, cdData = "\n                    ", cdLine = Just 21}),Elem (Element {elName = QName {qName = "CloseParenToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [Text (CData {cdVerbatim = CDataText, cdData = ")\n", cdLine = Just 22})], elLine = Just 22}),Text (CData {cdVerbatim = CDataText, cdData = "\n                ", cdLine = Just 23})], elLine = Just 15}),Text (CData {cdVerbatim = CDataText, cdData = "\n            ", cdLine = Just 24})], elLine = Just 4}),Text (CData {cdVerbatim = CDataText, cdData = "\n            ", cdLine = Just 25}),Elem (Element {elName = QName {qName = "SemicolonToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [], elLine = Just 26}),Text (CData {cdVerbatim = CDataText, cdData = "\n        ", cdLine = Just 26})], elLine = Just 3}),Text (CData {cdVerbatim = CDataText, cdData = "\n    ", cdLine = Just 27})], elLine = Just 2}),Text (CData {cdVerbatim = CDataText, cdData = "\n    ", cdLine = Just 28}),Elem (Element {elName = QName {qName = "EndOfFileToken", qURI = Nothing, qPrefix = Nothing}, elAttribs = [], elContent = [], elLine = Just 29}),Text (CData {cdVerbatim = CDataText, cdData = "\n", cdLine = Just 29})], elLine = Just 1}



SourceUnit [
	List 
	    [ExpressionStatement 
	        [MultiplyExpression 
	            [ParenthesizedExpression 
	                [OpenParenToken,
	                 AddExpression 
	                    [NumericLiteral,
	                    PlusTocken,
	                    NumericLiteral],
	                 CloseParenToken],
	            AsteriskToken,
	            ParenthesizedExpression 
	                [OpenParenToken,
	                 AddExpression 
	                    [NumericLiteral,
	                    PlusTocken,
	                    NumericLiteral],
	                 CloseParenToken]],
	            SemicolonToken]],
	            EndOfFileToken]